<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0114.1153                               -->
<workbook original-version='18.1' source-build='2024.3.3 (20243.25.0114.1153)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Sprint5Project3-15' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Superstore)' inline='true' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore' name='excel-direct.0hrin2o01up0361764o9a0d9t06u'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Brand/Downloads/Superstore.xls' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0hrin2o01up0361764o9a0d9t06u' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country/Region' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0hrin2o01up0361764o9a0d9t06u' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country/Region]' value='[Orders].[Country/Region]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B801:no:A1:B801:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_6D8641C13D274FD5AA2A469EC3E24472]' role='measure' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer Name)' hidden='true' name='[Action (Customer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Name]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date))' hidden='true' name='[Action (MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Mode)' hidden='true' name='[Action (Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Ship Mode]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Brand/AppData/Local/Temp/TableauTemp/#TableauTemp_1e7zs1y1cwpvr01bsx81h1jy9ed8.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/15/2025 06:26:54 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Category]' value='[Extract].[Category]' />
            <map key='[City]' value='[Extract].[City]' />
            <map key='[Country/Region]' value='[Extract].[Country/Region]' />
            <map key='[Customer ID]' value='[Extract].[Customer ID]' />
            <map key='[Customer Name]' value='[Extract].[Customer Name]' />
            <map key='[Discount]' value='[Extract].[Discount]' />
            <map key='[Order Date]' value='[Extract].[Order Date]' />
            <map key='[Order ID (Returns)]' value='[Extract].[Order ID]' />
            <map key='[Order ID]' value='[Extract].[Order ID1]' />
            <map key='[Postal Code]' value='[Extract].[Postal Code]' />
            <map key='[Product ID]' value='[Extract].[Product ID]' />
            <map key='[Product Name]' value='[Extract].[Product Name]' />
            <map key='[Profit]' value='[Extract].[Profit]' />
            <map key='[Quantity]' value='[Extract].[Quantity]' />
            <map key='[Region]' value='[Extract].[Region]' />
            <map key='[Returned]' value='[Extract].[Returned]' />
            <map key='[Row ID]' value='[Extract].[Row ID]' />
            <map key='[Sales]' value='[Extract].[Sales]' />
            <map key='[Segment]' value='[Extract].[Segment]' />
            <map key='[Ship Date]' value='[Extract].[Ship Date]' />
            <map key='[Ship Mode]' value='[Extract].[Ship Mode]' />
            <map key='[State]' value='[Extract].[State]' />
            <map key='[Sub-Category]' value='[Extract].[Sub-Category]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5142</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID1</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3114</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1427</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1505</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1143</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1143</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>583</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>722</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2226</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2211</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3405</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4110</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>21</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Returns)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>22</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>279</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_6D8641C13D274FD5AA2A469EC3E24472]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Country/Region' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Returned' />
        <field-sort-custom-order field='Calculation_358599176060678144' />
        <field-sort-custom-order field='Order ID (Returns)' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_6D8641C13D274FD5AA2A469EC3E24472'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Orders].[Order ID]' />
                    <expression op='[Returns].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.0hrin2o01up0361764o9a0d9t06u' name='Orders' table='[Orders$]' type='table'>
                  <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country/Region' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='excel-direct.0hrin2o01up0361764o9a0d9t06u' name='Returns' table='[Returns$]' type='table'>
                  <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
      <datasources>
        <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
      </datasources>
      <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
        <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
        </column>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Calculation_358599176060678144]' derivation='Avg' name='[avg:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' included-values='in-range-or-null'>
        <min>0.0</min>
      </filter>
      <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]'>
        <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]'>
        <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]'>
        <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 9 (generated)' name='[Action10_7AD7F3D92EED459F9F435CD47F1134AF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Holistic Analysis' type='sheet' worksheet='Return Rate by Category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Holistic Analysis' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action1_0E1D7ED3A7E0452DB1D3BD84F78B169A]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Customer Return Rate' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Customer Return Rate' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_6F27248F950443588FEBF866C52203C9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Holistic Analysis' type='sheet' worksheet='Return Rate Hotspots' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Holistic Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_AB1BAEE0F1E246CCAB858F6E68683901]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Returns Casuation Part 3' type='sheet' worksheet='Customer Return Rate' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Returns Casuation Part 3' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_E1569C87ED33410C908368D34A0A613C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Returns Casuation Part 3' type='sheet' worksheet='Return Rate of Ship Mode' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Returns Casuation Part 3' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5_EED3354784084D918302E66E386E97BD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Returns Casuation Part 3' type='sheet' worksheet='Customer Orders' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Returns Casuation Part 3' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_3AB27DA64A1D4074983546D0D286E309]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Holistic Analysis' type='sheet' worksheet='Customer Return Rate' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Holistic Analysis' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action7_38B9CB1D3AC24A9F8778742AE54D9889]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Holistic Analysis' type='sheet' worksheet='Return Rate by Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Holistic Analysis' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action8_5E4C0EF600B043B7A12F721479271152]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Holistic Analysis' type='sheet' worksheet='Return Rate of Ship Mode' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Holistic Analysis' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action9_903CCCA8082148C99A751E6280B22B55]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Holistic Analysis' type='sheet' worksheet='Return Rate by State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Holistic Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer Orders'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
          </datasources>
          <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
            <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_358599176060678144]' derivation='Avg' name='[avg:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='Count' name='[cnt:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action3_AB1BAEE0F1E246CCAB858F6E68683901]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Ship Mode)]'>
            <groupfilter function='level-members' level='[Ship Mode]' user:ui-action-filter='[Action4_E1569C87ED33410C908368D34A0A613C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[cnt:Order ID:qk]' included-values='in-range'>
            <min>1</min>
            <max>214</max>
          </filter>
          <filter class='quantitative' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[ctd:Order ID:qk]' included-values='in-range'>
            <min>1</min>
            <max>17</max>
          </filter>
          <computed-sort column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Customer Name:nk]' direction='DESC' using='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[cnt:Order ID:qk]' />
          <slices>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[ctd:Order ID:qk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Ship Mode)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[cnt:Order ID:qk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[cnt:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Customer Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{377FDE6A-BF7C-477A-825C-3A5F9AA78495}' />
    </worksheet>
    <worksheet name='Customer Return Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
          </datasources>
          <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
            <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_358599176060678144]' derivation='Avg' name='[avg:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action10_7AD7F3D92EED459F9F435CD47F1134AF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action2_6F27248F950443588FEBF866C52203C9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action5_EED3354784084D918302E66E386E97BD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Ship Mode)]'>
            <groupfilter function='level-members' level='[Ship Mode]' user:ui-action-filter='[Action4_E1569C87ED33410C908368D34A0A613C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action9_903CCCA8082148C99A751E6280B22B55]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Customer Name:nk]'>
            <groupfilter expression='COUNT([Order ID]) &gt; 1' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Customer Name:nk]' direction='DESC' using='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' />
          <slices>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Customer Name:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Ship Mode)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' value='p0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Customer Name:nk]</rows>
        <cols>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</cols>
      </table>
      <simple-id uuid='{789606B7-287C-4AB5-9C37-7FD02CD29B99}' />
    </worksheet>
    <worksheet name='Return Rate Hotspots'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
            <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_358599176060678144]' derivation='Avg' name='[avg:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action10_7AD7F3D92EED459F9F435CD47F1134AF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action6_3AB27DA64A1D4074983546D0D286E309]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action9_903CCCA8082148C99A751E6280B22B55]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Longitude (generated)]' field-type='quantitative' max='-5265085.6522471663' min='-15516935.627921918' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Latitude (generated)]' field-type='quantitative' max='7089730.9600346144' min='1531951.2062540324' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' />
              <text column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' />
              <lod column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]' />
              <size column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Latitude (generated)]</rows>
        <cols>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C44B7580-54A4-4DB4-AFB4-838DC2732F76}' />
    </worksheet>
    <worksheet name='Return Rate by Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
          </datasources>
          <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
            <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_358599176060678144]' derivation='Avg' name='[avg:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action2_6F27248F950443588FEBF866C52203C9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action6_3AB27DA64A1D4074983546D0D286E309]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action9_903CCCA8082148C99A751E6280B22B55]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]' direction='DESC' using='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' />
          <slices>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</rows>
        <cols>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{703CB903-9324-4552-9E4E-2C4C4C101066}' />
    </worksheet>
    <worksheet name='Return Rate by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
          </datasources>
          <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
            <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_358599176060678144]' derivation='Avg' name='[avg:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_358599176060678144]' derivation='Sum' name='[sum:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action10_7AD7F3D92EED459F9F435CD47F1134AF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action2_6F27248F950443588FEBF866C52203C9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action6_3AB27DA64A1D4074983546D0D286E309]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action9_903CCCA8082148C99A751E6280B22B55]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[mn:Order Date:ok]'>
            <groupfilter function='level-members' level='[mn:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[qr:Order Date:ok]'>
            <groupfilter function='level-members' level='[qr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]' included-values='in-range-or-null'>
            <min>98</min>
            <max>642</max>
          </filter>
          <slices>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[mn:Order Date:ok]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[qr:Order Date:ok]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</rows>
        <cols>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{0B6F6B2E-C219-4005-BEEE-CD41C1EDF90D}' />
    </worksheet>
    <worksheet name='Return Rate by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
          </datasources>
          <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
            <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_358599176060678144]' derivation='Avg' name='[avg:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_358599176060678144]' derivation='Sum' name='[sum:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action10_7AD7F3D92EED459F9F435CD47F1134AF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action2_6F27248F950443588FEBF866C52203C9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action6_3AB27DA64A1D4074983546D0D286E309]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]' />
              <size column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' />
              <text column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{77A3C5E9-978A-45D5-A788-7C837DB238A7}' />
    </worksheet>
    <worksheet name='Return Rate of Ship Mode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
          </datasources>
          <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
            <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_358599176060678144]' derivation='Avg' name='[avg:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action10_7AD7F3D92EED459F9F435CD47F1134AF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action2_6F27248F950443588FEBF866C52203C9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action3_AB1BAEE0F1E246CCAB858F6E68683901]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action9_903CCCA8082148C99A751E6280B22B55]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Ship Mode:nk]' direction='DESC' using='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' />
          <slices>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</rows>
        <cols>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{93DCDE2B-E4E0-46C7-B705-2B9E1DAECB1D}' />
    </worksheet>
    <worksheet name='Total Sales &amp; Total Returns'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
          </datasources>
          <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
            <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_358599176060678144]' derivation='Avg' name='[avg:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_358599176060678144]' derivation='Sum' name='[sum:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action10_7AD7F3D92EED459F9F435CD47F1134AF]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]'>
            <groupfilter function='level-members' level='[City]' user:ui-action-filter='[Action2_6F27248F950443588FEBF866C52203C9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-action-filter='[Action6_3AB27DA64A1D4074983546D0D286E309]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action9_903CCCA8082148C99A751E6280B22B55]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (City)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (State)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Customer Name)]</column>
            <column>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Sales:qk]' value='53' />
            <format attr='width' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]' value='64' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Sub-Category:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='666' />
                <format attr='maxwidth' value='666' />
                <format attr='minheight' value='698' />
                <format attr='maxheight' value='698' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]</rows>
        <cols>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{3A5B5A0F-ECBE-4BBE-AE29-B71F3380832C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Conclusion'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48958' id='3' param='horz' type-v2='layout-flow' w='49414' x='586' y='1042'>
            <zone h='48958' id='10' param='C:/Users/Brand/Downloads/generic store pic.JPG' type-v2='bitmap' w='49414' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='48958' id='7' param='vert' type-v2='layout-flow' w='49414' x='586' y='50000'>
            <zone forceUpdate='true' h='25912' id='9' type-v2='text' w='49414' x='586' y='50000'>
              <formatted-text>
                <run bold='true' fontsize='16'>Recommendations:</run>
                <run>Æ&#10;</run>
                <run fontsize='16'>1) Provide higher discounts for later shipping times</run>
                <run>Æ&#10;</run>
                <run fontsize='16'>2) Change Return Policy </run>
                <run>Æ&#10;</run>
                <run fontsize='16'>3) Investigate further into Regional hotspots like Southern Californa to determine causes</run>
                <run>Æ&#10;</run>
                <run fontsize='16'>4) Prioritize products with high sales and low return rates</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='97916' id='36' param='horz' type-v2='layout-flow' w='49414' x='50000' y='1042'>
            <zone forceUpdate='true' h='97916' id='37' is-centered='0' is-scaled='1' param='C:/Users/Brand/Downloads/shipping open ocean.JPG' type-v2='bitmap' w='49414' x='50000' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='40' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='48958' id='10' is-fixed='true' param='C:/Users/Brand/Downloads/generic store pic.JPG' type-v2='bitmap' w='49414' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' forceUpdate='true' h='97916' id='37' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Brand/Downloads/shipping open ocean.JPG' type-v2='bitmap' w='49414' x='50000' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='25912' id='9' type-v2='text' w='49414' x='586' y='50000'>
                  <formatted-text>
                    <run bold='true' fontsize='16'>Recommendations:</run>
                    <run>Æ&#10;</run>
                    <run fontsize='16'>1) Provide higher discounts for later shipping times</run>
                    <run>Æ&#10;</run>
                    <run fontsize='16'>2) Change Return Policy </run>
                    <run>Æ&#10;</run>
                    <run fontsize='16'>3) Investigate further into Regional hotspots like Southern Californa to determine causes</run>
                    <run>Æ&#10;</run>
                    <run fontsize='16'>4) Prioritize products with high sales and low return rates</run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F5879D33-32A4-403A-A6AD-E6E7E3F8AC25}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Holistic Analysis'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
      </datasources>
      <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
        <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
        </column>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Calculation_358599176060678144]' derivation='Avg' name='[avg:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98148' id='79' param='horz' type-v2='layout-flow' w='99064' x='468' y='926'>
            <zone h='98148' id='67' param='horz' type-v2='layout-flow' w='99064' x='468' y='926'>
              <zone h='98148' id='13' param='vert' type-v2='layout-flow' w='99064' x='468' y='926'>
                <zone h='98148' id='11' type-v2='layout-basic' w='99064' x='468' y='926'>
                  <zone h='49076' id='5' param='horz' type-v2='layout-flow' w='19899' x='468' y='49998'>
                    <zone h='49076' id='14' type-v2='layout-basic' w='19899' x='468' y='49998'>
                      <zone h='49076' id='26' name='Return Rate by Month' w='19899' x='468' y='49998'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='51633' id='8' param='horz' type-v2='layout-flow' w='47923' x='42597' y='47441'>
                    <zone h='51633' id='30' name='Return Rate Hotspots' w='47923' x='42597' y='47441'>
                      <layout-cache has-max-size-h='true' maxheight='44' minheight='44' minwidth='202' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='46515' id='10' param='vert' type-v2='layout-flow' w='27212' x='63308' y='926'>
                    <zone fixed-size='363' h='42940' id='32' is-fixed='true' name='Return Rate by State' w='27212' x='63308' y='926'>
                      <layout-cache type-h='cell' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='49072' id='17' param='vert' type-v2='layout-flow' w='17619' x='24978' y='926'>
                    <zone h='49072' id='21' name='Customer Return Rate' w='17619' x='24978' y='926'>
                      <layout-cache fixed-size-h='15878' type-h='fixed' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='49076' id='18' param='vert' type-v2='layout-flow' w='22230' x='20367' y='49998'>
                    <zone h='49076' id='24' name='Return Rate of Ship Mode' w='22230' x='20367' y='49998'>
                      <layout-cache minheight='203' type-h='scalable' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='49072' id='19' param='vert' type-v2='layout-flow' w='24510' x='468' y='926'>
                    <zone fixed-size='180' h='20833' id='43' is-fixed='true' param='horz' type-v2='layout-flow' w='24510' x='468' y='926'>
                      <zone forceUpdate='true' h='20833' id='44' type-v2='text' w='24510' x='468' y='926'>
                        <formatted-text>
                          <run fontcolor='#000000' fontsize='12'>This dashboard analyzes product return trends by different dimensions, including customer, category, state, city, month, and shipping mode. It provides insights into which customers and locations have the highest return rates, which product categories see the most returns, and how returns fluctuate over time. The interactive map allows users to drill down into any metrics, updating all charts dynamically.</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                    <zone h='28239' id='77' name='Total Sales &amp; Total Returns' w='24510' x='468' y='21759'>
                      <layout-cache minheight='178' type-h='scalable' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='46515' id='28' param='horz' type-v2='layout-flow' w='20711' x='42597' y='926'>
                    <zone h='46515' id='29' name='Return Rate by Category' w='20711' x='42597' y='926'>
                      <layout-cache cell-count-w='3' minheight='203' non-cell-size-w='81' type-h='scalable' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='8767' id='36' mode='dropdown' name='Return Rate Hotspots' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]' type-v2='filter' values='database' w='9012' x='90520' y='19677'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='70630' id='42' name='Return Rate Hotspots' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type-v2='filter' values='database' w='9012' x='90520' y='28444'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='10472' id='68' mode='slider' name='Return Rate of Ship Mode' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]' type-v2='filter' values='database' w='9012' x='90520' y='926'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8279' id='39' mode='dropdown' name='Return Rate by State' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]' type-v2='filter' values='database' w='9012' x='90520' y='11398'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2300' minheight='2300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='83' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='82' param='vert' type-v2='layout-flow' w='99064' x='468' y='926'>
                <zone forceUpdate='true' h='20833' id='44' type-v2='text' w='24510' x='468' y='926'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='12'>This dashboard analyzes product return trends by different dimensions, including customer, category, state, city, month, and shipping mode. It provides insights into which customers and locations have the highest return rates, which product categories see the most returns, and how returns fluctuate over time. The interactive map allows users to drill down into any metrics, updating all charts dynamically.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49072' id='21' is-fixed='true' name='Customer Return Rate' w='17619' x='24978' y='926'>
                  <layout-cache fixed-size-h='15878' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46515' id='29' is-fixed='true' name='Return Rate by Category' w='20711' x='42597' y='926'>
                  <layout-cache cell-count-w='3' minheight='203' non-cell-size-w='81' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8279' id='39' mode='dropdown' name='Return Rate by State' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]' type-v2='filter' values='database' w='9012' x='90520' y='11398'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42940' id='32' is-fixed='true' name='Return Rate by State' w='27212' x='63308' y='926'>
                  <layout-cache type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='218' h='28239' id='77' is-fixed='true' name='Total Sales &amp; Total Returns' w='24510' x='468' y='21759'>
                  <layout-cache minheight='178' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8767' id='36' mode='dropdown' name='Return Rate Hotspots' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]' type-v2='filter' values='database' w='9012' x='90520' y='19677'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='70630' id='42' name='Return Rate Hotspots' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type-v2='filter' values='database' w='9012' x='90520' y='28444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51633' id='30' is-fixed='true' name='Return Rate Hotspots' w='47923' x='42597' y='47441'>
                  <layout-cache has-max-size-h='true' maxheight='44' minheight='44' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49076' id='26' is-fixed='true' name='Return Rate by Month' w='19899' x='468' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10472' id='68' mode='slider' name='Return Rate of Ship Mode' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]' type-v2='filter' values='database' w='9012' x='90520' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49076' id='24' is-fixed='true' name='Return Rate of Ship Mode' w='22230' x='20367' y='49998'>
                  <layout-cache minheight='203' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9DE42EAC-5008-4882-B0EA-77285D8C629B}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Return Problem'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
      </datasources>
      <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
        <column caption='Returns' datatype='integer' name='[Calculation_358599176060678144]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_358599176060678144]' derivation='Avg' name='[avg:Calculation_358599176060678144:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98148' id='31' param='horz' type-v2='layout-flow' w='99064' x='468' y='926'>
            <zone h='98148' id='10' param='horz' type-v2='layout-flow' w='89702' x='468' y='926'>
              <zone h='98148' id='8' type-v2='layout-basic' w='89702' x='468' y='926'>
                <zone h='98148' id='3' param='vert' type-v2='layout-flow' w='89702' x='468' y='926'>
                  <zone fixed-size='55' forceUpdate='true' h='7292' id='6' is-fixed='true' type-v2='text' w='89702' x='468' y='926'>
                    <formatted-text>
                      <run bold='true' fontsize='14'>Introduction: </run>
                      <run fontsize='14'>This storyboard will dive into all patterns related to product returns for Superstore and offer some recommendations based on provided findings. A geographic map of the United States, as shown below, illistrates the average return rate by city. Southern Californa for instance has a large grouping. </run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='90856' id='29' name='Return Rate Hotspots' w='89702' x='468' y='8218'>
                    <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98148' id='30' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='926'>
              <zone h='7986' id='32' name='Return Rate Hotspots' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' show-domain='false' show-null-ctrls='false' show-reldate-picker='false' type-v2='filter' w='9362' x='90170' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16898' id='33' name='Return Rate Hotspots' pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type-v2='size' w='9362' x='90170' y='8912'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7523' id='34' name='Return Rate Hotspots' pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type-v2='color' w='9362' x='90170' y='25810'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='45' param='vert' type-v2='layout-flow' w='99064' x='468' y='926'>
                <zone fixed-size='55' forceUpdate='true' h='7292' id='6' type-v2='text' w='89702' x='468' y='926'>
                  <formatted-text>
                    <run bold='true' fontsize='14'>Introduction: </run>
                    <run fontsize='14'>This storyboard will dive into all patterns related to product returns for Superstore and offer some recommendations based on provided findings. A geographic map of the United States, as shown below, illistrates the average return rate by city. Southern Californa for instance has a large grouping. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7986' id='32' name='Return Rate Hotspots' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' show-domain='false' show-null-ctrls='false' show-reldate-picker='false' type-v2='filter' w='9362' x='90170' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='90856' id='29' is-fixed='true' name='Return Rate Hotspots' w='89702' x='468' y='8218'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16898' id='33' name='Return Rate Hotspots' pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type-v2='size' w='9362' x='90170' y='8912'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7523' id='34' name='Return Rate Hotspots' pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type-v2='color' w='9362' x='90170' y='25810'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{03F787AB-F087-41A9-89EF-3DC04A569C41}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Returns Casuation Part 3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
      </datasources>
      <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
        <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
        <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
        <column-instance column='[Order ID]' derivation='Count' name='[cnt:Order ID:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='84838' id='3' param='horz' type-v2='layout-flow' w='87244' x='468' y='926'>
            <zone fixed-size='1032' h='84838' id='7' is-fixed='true' name='Return Rate of Ship Mode' w='60854' x='468' y='926'>
              <layout-cache minheight='203' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='84838' id='11' param='vert' type-v2='layout-flow' w='26390' x='61322' y='926'>
              <zone h='42419' id='12' name='Customer Return Rate' w='26390' x='61322' y='926'>
                <layout-cache fixed-size-h='15878' minwidth='240' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42419' id='14' param='vert' type-v2='layout-flow' w='26390' x='61322' y='43345'>
                <zone h='42419' id='15' name='Customer Orders' w='26390' x='61322' y='43345'>
                  <layout-cache fixed-size-h='15924' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='84838' id='5' param='vert' type-v2='layout-flow' w='11820' x='87712' y='926'>
            <zone h='7523' id='8' name='Return Rate of Ship Mode' pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type-v2='color' w='11820' x='87712' y='926'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='10880' id='13' mode='dropdown' name='Customer Return Rate' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Customer Name:nk]' type-v2='filter' values='database' w='11820' x='87712' y='8449'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='7986' id='16' name='Customer Orders' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[cnt:Order ID:qk]' type-v2='filter' values='database' w='11820' x='87712' y='19329'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='13310' id='41' param='vert' type-v2='layout-flow' w='99064' x='468' y='85764'>
            <zone h='10301' id='42' type-v2='text' w='99064' x='468' y='85764'>
              <formatted-text>
                <run bold='true' fontsize='14'>Findings: </run>
                <run fontsize='14'>Same Day Shipping has the highest return rate for all three categories. Several diffirent theories could account for this result. The most likely reason is that same day shipping is more expensive so the quantity of orders is lower and the people who ordered same day were more likely to return the item. A good example is Sandra Glassco who ordered 83 items same day shipping with a 97.6% percent return rate.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='45' param='vert' type-v2='layout-flow' w='99064' x='468' y='926'>
                <zone fixed-size='280' h='84838' id='7' is-fixed='true' name='Return Rate of Ship Mode' w='60854' x='468' y='926'>
                  <layout-cache minheight='203' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7523' id='8' name='Return Rate of Ship Mode' pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type-v2='color' w='11820' x='87712' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10880' id='13' mode='dropdown' name='Customer Return Rate' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Customer Name:nk]' type-v2='filter' values='database' w='11820' x='87712' y='8449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42419' id='12' is-fixed='true' name='Customer Return Rate' w='26390' x='61322' y='926'>
                  <layout-cache fixed-size-h='15878' minwidth='240' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7986' id='16' name='Customer Orders' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[cnt:Order ID:qk]' type-v2='filter' values='database' w='11820' x='87712' y='19329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42419' id='15' is-fixed='true' name='Customer Orders' w='26390' x='61322' y='43345'>
                  <layout-cache fixed-size-h='15924' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10301' id='42' type-v2='text' w='99064' x='468' y='85764'>
                  <formatted-text>
                    <run bold='true' fontsize='14'>Findings: </run>
                    <run fontsize='14'>Same Day Shipping has the highest return rate for all three categories. Several diffirent theories could account for this result. The most likely reason is that same day shipping is more expensive so the quantity of orders is lower and the people who ordered same day were more likely to return the item. A good example is Sandra Glassco who ordered 83 items same day shipping with a 97.6% percent return rate.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A309B5F1-2D26-44BB-9C61-46AA11144FED}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Returns Causation '>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
      </datasources>
      <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='78009' id='3' param='horz' type-v2='layout-flow' w='51551' x='468' y='926'>
            <zone h='78009' id='8' name='Total Sales &amp; Total Returns' w='51551' x='468' y='926'>
              <layout-cache minwidth='132' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='78009' id='5' param='vert' type-v2='layout-flow' w='13575' x='85957' y='926'>
            <zone h='8681' id='31' mode='slider' name='Return Rate by Category' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]' type-v2='filter' values='database' w='13575' x='85957' y='926'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='12500' id='32' name='Return Rate by Category' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]' type-v2='filter' values='database' w='13575' x='85957' y='9607'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='20139' id='6' param='vert' type-v2='layout-flow' w='99064' x='468' y='78935'>
            <zone fixed-size='130' forceUpdate='true' h='15972' id='7' is-fixed='true' type-v2='text' w='99064' x='468' y='78935'>
              <formatted-text>
                <run bold='true' fontsize='14'>Findings:</run>
                <run fontsize='14'> When Looking at returns for Superstore we can examine different metrics and elements seperately to determine what is or are sources of abnormal returns. As we can see from the scatterplot the office supplies tend to have sub-categories with high total returns (ie binders, paper). However it needs to be considered that return rate is of more importance than total returns because of the fact that high returns often correlate with more sales. Overall the average return rate is relatively similar across all categories. The one sub-category to stand out with low sales and high total returns is paper.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='78009' id='28' name='Return Rate by Category' w='33938' x='52019' y='926'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='44' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='43' param='vert' type-v2='layout-flow' w='99064' x='468' y='926'>
                <zone fixed-size='280' h='78009' id='8' is-fixed='true' name='Total Sales &amp; Total Returns' w='51551' x='468' y='926'>
                  <layout-cache minwidth='132' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8681' id='31' mode='slider' name='Return Rate by Category' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]' type-v2='filter' values='database' w='13575' x='85957' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12500' id='32' mode='checkdropdown' name='Return Rate by Category' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]' type-v2='filter' values='database' w='13575' x='85957' y='9607'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='78009' id='28' is-fixed='true' name='Return Rate by Category' w='33938' x='52019' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='130' forceUpdate='true' h='15972' id='7' type-v2='text' w='99064' x='468' y='78935'>
                  <formatted-text>
                    <run bold='true' fontsize='14'>Findings:</run>
                    <run fontsize='14'> When Looking at returns for Superstore we can examine different metrics and elements seperately to determine what is or are sources of abnormal returns. As we can see from the scatterplot the office supplies tend to have sub-categories with high total returns (ie binders, paper). However it needs to be considered that return rate is of more importance than total returns because of the fact that high returns often correlate with more sales. Overall the average return rate is relatively similar across all categories. The one sub-category to stand out with low sales and high total returns is paper.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{77FD7871-673B-4036-98FA-9320FA38399A}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Returns Causation Part 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders+ (Superstore)' name='federated.1klrc0f0kk2ndo1gv1y1j0kzwund' />
      </datasources>
      <datasource-dependencies datasource='federated.1klrc0f0kk2ndo1gv1y1j0kzwund'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='87963' id='5' param='horz' type-v2='layout-flow' w='87068' x='468' y='926'>
            <zone h='87963' id='9' name='Return Rate by Month' w='87068' x='468' y='926'>
              <layout-cache cell-count-w='12' minheight='184' non-cell-size-w='81' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='87963' id='6' param='vert' type-v2='layout-flow' w='11996' x='87536' y='926'>
            <zone h='7523' id='13' name='Return Rate by Month' pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]' type-v2='color' w='11996' x='87536' y='926'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='6019' id='31' mode='dropdown' name='Return Rate by Month' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]' type-v2='filter' values='database' w='11996' x='87536' y='8449'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='8681' id='30' mode='slider' name='Return Rate by Month' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[qr:Order Date:ok]' type-v2='filter' values='database' w='11996' x='87536' y='14468'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='10185' id='7' param='vert' type-v2='layout-flow' w='99064' x='468' y='88889'>
            <zone forceUpdate='true' h='7176' id='12' type-v2='text' w='99064' x='468' y='88889'>
              <formatted-text>
                <run bold='true' fontsize='14'>Findings:</run>
                <run fontsize='14'> Across all categories the Q3 and Q4 have the highest return rate, while the rest of the year remains around a 20% return rate. The months of August, September, and December are notable for being above 30%.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='42' param='vert' type-v2='layout-flow' w='99064' x='468' y='926'>
                <zone h='6019' id='31' mode='dropdown' name='Return Rate by Month' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]' type-v2='filter' values='database' w='11996' x='87536' y='8449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8681' id='30' mode='slider' name='Return Rate by Month' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[qr:Order Date:ok]' type-v2='filter' values='database' w='11996' x='87536' y='14468'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='87963' id='9' is-fixed='true' name='Return Rate by Month' w='87068' x='468' y='926'>
                  <layout-cache cell-count-w='12' minheight='184' non-cell-size-w='81' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7523' id='13' name='Return Rate by Month' pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]' type-v2='color' w='11996' x='87536' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7176' id='12' type-v2='text' w='99064' x='468' y='88889'>
                  <formatted-text>
                    <run bold='true' fontsize='14'>Findings:</run>
                    <run fontsize='14'> Across all categories the Q3 and Q4 have the highest return rate, while the rest of the year remains around a 20% return rate. The months of August, September, and December are notable for being above 30%.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DA12CF12-1E67-4E79-A5F8-34F675F8DD0E}' />
    </dashboard>
    <dashboard name='Superstore Return Analysis' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98148' id='13' param='vert' removable='false' type-v2='layout-flow' w='99064' x='468' y='926'>
            <zone h='4745' id='14' type-v2='title' w='99064' x='468' y='926'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93403' id='11' param='vert' removable='false' type-v2='layout-flow' w='99064' x='468' y='5671'>
              <zone h='93403' id='1' param='vert' removable='false' type-v2='layout-flow' w='99064' x='468' y='5671'>
                <zone h='11690' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99064' x='468' y='5671' />
                <zone h='81713' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99064' x='468' y='17361'>
                  <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                    <story-points>
                      <story-point caption='Introduction to Problem' captured-sheet='Return Problem' id='5'>
                        <capturedDeltas>
                          <dashboard name='Return Problem'>
                            <zone id='6'>
                              <formatted-text>
                                <run bold='true' fontsize='14'>Introduction: </run>
                                <run fontsize='14'>This storyboard will dive into all patterns related to product returns for Superstore and offer some recommendations based on provided findings. A geographic map of the United States, as shown below, illistrates the average return rate by city. Southern Californa for instance has a large grouping. </run>
                              </formatted-text>
                            </zone>
                          </dashboard>
                          <worksheet name='Return Rate Hotspots'>
                            <filter class='quantitative' column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' included-values='in-range-or-null'>
                              <min>0.10299999999999999</min>
                            </filter>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Latitude (generated)]' field-type='quantitative' max='5621639.1853680005' min='1628921.1103009568' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Longitude (generated)]' field-type='quantitative' max='-5909388.2616324592' min='-16380725.421958275' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='Analysis of Returns: Categories &amp; Sub-Categories' captured-sheet='Returns Causation ' id='1'>
                        <capturedDeltas>
                          <worksheet name='Total Sales &amp; Total Returns'>
                            <annotations>
                              <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='180'>
                                <formatted-text>
                                  <run fontcolor='#787878'>Sub-Category: </run>
                                  <run bold='true'><![CDATA[<[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Sub-Category:nk]>]]></run>
                                  <run>Æ&#10;</run>
                                  <run fontcolor='#787878'>Returns: </run>
                                  <run bold='true'><![CDATA[<[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]>]]></run>
                                  <run>Æ&#10;</run>
                                  <run fontcolor='#787878'>Sales: </run>
                                  <run bold='true'><![CDATA[<[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Sales:qk]>]]></run>
                                </formatted-text>
                                <point>
                                  <visual-coordinate class='mark'>
                                    <tuple-reference>
                                      <tuple-descriptor>
                                        <pane-descriptor>
                                          <x-fields>
                                            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Sales:qk]</field>
                                          </x-fields>
                                          <y-fields>
                                            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]</field>
                                          </y-fields>
                                        </pane-descriptor>
                                        <columns>
                                          <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Sub-Category:nk]</field>
                                          <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]</field>
                                          <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Sales:qk]</field>
                                        </columns>
                                      </tuple-descriptor>
                                      <tuple>
                                        <value>&quot;Paper&quot;</value>
                                        <value>487</value>
                                        <value>98680.107999999775</value>
                                      </tuple>
                                    </tuple-reference>
                                  </visual-coordinate>
                                </point>
                                <body x='130' y='-20' />
                              </annotation>
                            </annotations>
                            <selection-collection>
                              <tuple-selection>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Sales:qk]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Sub-Category:nk]</field>
                                      <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]</field>
                                      <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Sales:qk]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>&quot;Paper&quot;</value>
                                    <value>487</value>
                                    <value>98680.107999999775</value>
                                  </tuple>
                                </tuple-reference>
                              </tuple-selection>
                            </selection-collection>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='Analysis of Returns: Returns by Quarter' captured-sheet='Returns Causation Part 2' id='6' />
                      <story-point caption='Analysis of Returns: Returns by Shipping Mode' captured-sheet='Returns Casuation Part 3' id='7'>
                        <capturedDeltas>
                          <worksheet name='Customer Return Rate'>
                            <clear-sort column='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Customer Name:nk]' />
                            <shelf-sort-deltas>
                              <shelf-sorts>
                                <shelf-sort-v2 dimension-to-sort='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' shelf='rows' />
                              </shelf-sorts>
                            </shelf-sort-deltas>
                          </worksheet>
                          <dashboard name='Returns Casuation Part 3'>
                            <zone id='10'>
                              <formatted-text>
                                <run bold='true' fontsize='14'>Findings: </run>
                                <run fontsize='14'>Same Day Shipping has the highest return rate for all three categories. Several diffirent theories could account for this result. The most likely reason is that same day shipping is prefered by customers which return items more frequently. A good example is Sandra Glassco who ordered 83 items using same day shipping with a 97.6% percent return rate.</run>
                              </formatted-text>
                            </zone>
                          </dashboard>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='Interactive Infographic' captured-sheet='Holistic Analysis' id='4'>
                        <capturedDeltas>
                          <worksheet name='Return Rate Hotspots'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Latitude (generated)]' field-type='quantitative' max='7173269.358917648' min='255268.1147913771' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[Longitude (generated)]' field-type='quantitative' max='-1850051.9503654148' min='-19690042.365337107' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='Recommendations' captured-sheet='Conclusion' id='8' />
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{E1DACBEA-3979-4F62-BCFB-EE9242BFC81E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Superstore Return Analysis'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F978F59E-1741-4DE1-BE18-5386565369DD}' />
    </window>
    <window class='worksheet' name='Return Rate Hotspots'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='196'>
            <card param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</field>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{945BAFD4-7163-4A0C-A284-ED43F7B218EA}' />
    </window>
    <window class='worksheet' name='Total Sales &amp; Total Returns'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Sub-Category:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB66D243-02A7-4E0B-9A16-A1184978F75F}' />
    </window>
    <window class='worksheet' name='Return Rate by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]</field>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93733FC9-D2CF-49E9-9D19-43AAE4744E9B}' />
    </window>
    <window class='worksheet' name='Return Rate by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]' type='color' />
            <card mode='dropdown' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]' type='filter' />
            <card mode='slider' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[qr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[qr:Order Date:ok]</field>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F7AD68E-FFD6-441A-8861-4F4D4C5CF438}' />
    </window>
    <window class='worksheet' name='Return Rate of Ship Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[:Measure Names]</field>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</field>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Category:nk]</field>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Ship Mode:nk]</field>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:State:nk]</field>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD4ED585-4860-439D-9534-25255AEC1414}' />
    </window>
    <window class='worksheet' name='Customer Return Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[avg:Calculation_358599176060678144:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD3A5C33-0ED1-4879-B672-90776D56E56F}' />
    </window>
    <window class='worksheet' name='Customer Orders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Customer Name:nk]</field>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[none:Order ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59FA91F8-CC72-429B-94BC-319A7231A933}' />
    </window>
    <window class='worksheet' name='Return Rate by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1klrc0f0kk2ndo1gv1y1j0kzwund].[sum:Calculation_358599176060678144:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B1741D5-5EA7-4E3F-A4E5-ACD8C5E37B0B}' />
    </window>
    <window class='dashboard' name='Return Problem'>
      <viewpoints>
        <viewpoint name='Return Rate Hotspots'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='32' />
      <simple-id uuid='{E2A33D65-AE4A-4C53-937D-E3EB119B9076}' />
    </window>
    <window class='dashboard' name='Returns Causation '>
      <viewpoints>
        <viewpoint name='Return Rate by Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales &amp; Total Returns'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{A36960DA-6BAC-4EB5-8593-3738B68F2AC5}' />
    </window>
    <window class='dashboard' name='Returns Causation Part 2'>
      <viewpoints>
        <viewpoint name='Return Rate by Month'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='30' />
      <simple-id uuid='{5FC5CC52-1838-4D68-B97E-282E0DC85FBA}' />
    </window>
    <window class='dashboard' name='Returns Casuation Part 3'>
      <viewpoints>
        <viewpoint name='Customer Orders'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Customer Return Rate' />
        <viewpoint name='Return Rate of Ship Mode'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6C8A2250-1BFB-4627-8FDF-06F19ADC0A8D}' />
    </window>
    <window class='dashboard' name='Holistic Analysis'>
      <viewpoints>
        <viewpoint name='Customer Return Rate' />
        <viewpoint name='Return Rate Hotspots'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Return Rate by Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Return Rate by Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Return Rate by State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Return Rate of Ship Mode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sales &amp; Total Returns'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{055939A8-85AE-460A-8ECF-BE046B436F9C}' />
    </window>
    <window class='dashboard' name='Conclusion'>
      <viewpoints />
      <active id='9' />
      <simple-id uuid='{082A47F2-F131-41E6-9341-B24152B96A79}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Conclusion' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Orders' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Customer Return Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Holistic Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Return Problem' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Return Rate Hotspots' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Return Rate by Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Return Rate by Month' width='192'>
      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
      +X+I9Hk24oxnvwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Return Rate by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Return Rate of Ship Mode' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Returns Casuation Part 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Returns Causation ' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Returns Causation Part 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANX0lEQVR4nO3dWW8bWXrG8X+xSBYpSqJWSqKtxYvkve1uj4P05CaDCSbIRW6C+YQDDAZB
      AgQJkA2T6c5MphG72x17pr20be2btYukxJ1VJxfu9tjdki22i5Ks8/zuRJbqPRT4qOqw+NZx
      jDEGEUtFjnoAIkdJARCrKQBiNQVArKYAiNVeC8Dk119x9+5dHj+beW2jYr5A44A7DMpb/Oa/
      P+PO53epBa88YQz5QuH72/tlHj+e3HNf1cIqd/7wBIDFma+ZWVjdt26+kAfgq0cPDzhSEYi+
      +sPC8zV+8pOf8umnnzAxkuHL+w/oy44wfft3xM5OcL63n96x0yxPz5CIRSmWd+hMtTG1tEU8
      HudHN65iyjnc9Gmu9O9wf3KNdP05uZLPxNks//xv/8VP/+qvqe+ss16ocevmDTA+j766T66Q
      5/LZASrxPoL8Ct2nRqnvbPBg8jm3PphgcXmJSLxGrFFgeX2bC1evM/voD9R8n5GzE/z7f/wr
      H//4L1mam6JWKjI4MsGpTNdR/V3lPfHaEcCvFvmXf/wV7ZkxPv/sdzQclzu375DNjnL95ofk
      lxapADMzsyzPTeL1ZIlVN+geuUS9nP9mL4ZnD77gn34/yUfn+/F9n53lR2z4XYyPT3Aq08H/
      3r5LdX2SezObAJweO8+100km8y4P793l6cwcCdcB4MJwD48nZ4i29YDxmV5a59bNG3x17x7F
      is+HN84zP7vF+Pg4F86N0J7u46MbN5ib3fuoIvKq1wLgein+9u9+ztrkH0lnToMJuP7BB3R2
      J7h3+//wOuLcu3OXlY0cuEkyfS/+wzqOA863e3EYv3qLmxMDPJqcZGpqDs/zCIxhd2uVpdU8
      p7IDpDJnOD/YAcDy3DSfP5xjdKiflLNLtD3zckwdg2d5cPu3TFw8B06ESL3EF1/cJd2XIfJK
      3aCyy5PpeZzIN485iLyVc5yuBJtGhV//5yf8xc/+hlRM72BpvWMVAJHDpo9BxWoKgFhNARCr
      Rd++icjJszL3lMfTyzoCiJ3mFla5+dFlfQokdirm1rj/cKq1ATDGvLhIJnJMtfQUKAiCt28k
      coQOPgk2hpkHtyl6p2gU1xm9eIOdlRm2ijUSTgMn5rK0tMPFS2NkBwdbOGSR8Bw4AI1KgfVc
      iVJ0mytn+qnWAkwkRjoVwYm4mCDgzHCUjbUVanXDcDZDEARoiiHHWVNzANOoUjVRNtdW6e7u
      IuoE5EoNPKdGJJEm7kKtvIubTNPmRfF9H9d1Wzl+kXfS0kmwAiDHna4DiNUUALGaAiBWUwDE
      agqAWE0BEKspAGI1BUCspgCI1RQAsZoCIFZTAMRqCoBYTQEQqykAYjUFQKx24AAYEzA3M0W1
      VuXZk6fU/BfdX6sb2+S31tgpVVlZWaVarbZyvCKhauLOcAYT+CxNPiJHD+ddmF/bJAh8yhGX
      YHuNufldhk93kR05jxd11BMsx97BA+A3qNRqGLedZGmF+bVunKBOoVjHc+q4yTTXr/azsr7B
      2to6Y8NDAGqJlGNNPcFiNU2CxWoKgFhNARCrKQBiNQVArKYAiNUUALGaAiBWUwDEagqAWE0B
      EKspAGI1BUCspgCI1RQAsZoCIFZTAMRqB26JNKbB1NNJYrE4uZ0dxq98wM7qAlvFOolIHSfm
      sbVZZHh0iP7e3laOWSQ0Bw6A47gkPJfVzSLXLg2xnq9hTIT2ZAzHSRCYGl7UsLryHD9w6O9J
      qylejr2DHwEaNYq1gNHRQZ7NbjEy1k5AnK1ig4RTI5bsprurj0qxgBuPv+wFVk+wHGdqiher
      aRIsVlMAxGoKgFhNARCrKQBiNQVArKYAiNUUALGaAiBWUwDEagqAWE0BEKs1sUbY+ycwhi+f
      l0Lfb1fCZbwnEfp+5fCd6AAYA9sVP/T9uhEn9H3K0dApkFhNARCrNbFQtmF5cY5KtaKFsuXE
      aGIO4OPFkzyfekSO3vdioeygRaWNMTQajdbsXA7VwQNgGjz++hnnJ86RfD73XiyU7bcoAY7j
      EI2e6M8PrHGie4L9wPCb2Z3Q99vXFuWjwbbQ9yuHT5NgsZoCIFZTAMRqCoBYTQEQqykAYrVD
      +zDbGNOSL6bFIg4dnm6/KD/M4QUA+GI5/K8m9yZdfpRNhb5fscO+p0BPHj/mH37xS8qHORqR
      Q7ZvAKL+DjWvE51cyEm2bwDWt3Y5N5pFrR9yku07B8ieGqb31OjJbhkT6+17BNjZXuWXv/h7
      9O1+Ocn2DUB/doSBvi6dAsmJtmcAjPGZm3vOcHYILXEnJ9n+p/iNMrX2DN4hDkZ+uOVClY1i
      +F1qE31JErGT+4WBPQPgOC5uvMbtX9/m+oeXSR72qN5zTzdKlOtBqPt0HYerg/tf8Fsu1Hiy
      Hv5Vm5Euz74A7K4tsLnrcOrCMLFvHnu5UHY8Tq6ghbLf5NlGma1SuP+NY+6bAyA/zN4ByO9C
      DEw9eGUO4JJqT1Eq17k03vxC2a2aS7ypQf2omuJb0mVqeHPNFr1Y3/c5yf3/ewZgcPwSg+OX
      qFUqf5olmypbWwUGswM8m91seqHsoEWtx29qUD+qpnjHacFnZw5vrtmiu9W5rnuibwCw7yvb
      eD7PVw+ecunWnzPY1Y4TSXDl2hUAenv7XmzU1kb6O2c7HR0dLRusHC+L+SqbpXro+73Q30Yi
      ejjzjn0DsDC/SKlcZ+rZEwZv3TyUwcj7ZSlf5elG+BPvse7EvgGo1APy1fDOyfYNwNDQAKR6
      uXFlIrRiIu9qZbfGZ3OF0Pa373EmMLA0OUmlFeezIsfEnkeA7aVpPv/jE3Z2y8QPe0Qih2jP
      AHRlz3Btt8TM/CYBqCdATqx9rgQ7nLtwlXMXDns4Iofr5F7jFjkABUCspgCI1RQAsZoCIFZT
      AMRqCoBYTQEQqykAYjUFQKzW1ELZ29vbmKCuhbLlxGii182wtbVNW7BDzveaXihbPcHvWvT4
      9QS3aoXdN9X0g3DvttFEAAI211ZJJsdIVuebXihbPcHvWvT49QS35HW+paYbCbdD/8ABcJwo
      f/bxxwBks0PfPNrJyHe26+kfCGloIq2nSbBYTQEQqykAYjUFQKymAIjVFACxmgIgVlMAxGoK
      gFhNARCrKQBiNQVArKYAiNUUALGaAiBWUwDEagqAWO3AHWHGBDx9Osloto8n0wtaKFtOhCZa
      IiN0pjvYzpe0ULaa4l/UtKkp3pgG2+sb9A8O8Gx2Wwtlqynevqb4y9euAdDfn3nxoBbKlvec
      JsFiNQVArKYAiNUUALGaAiBWUwDEagqAWE0BEKspAGI1BUCspgCI1RQAsZoCIFZTAMRqCoBY
      TQEQqykAYrUm1gl+oVF4zpczeT68epGV+Um2ijUSTgMn5rK0tMPFS2NkBwdbMVaR0DUdgDoe
      CT9PrlTHRGKkUxGciIsJAs4MR9lYW6FWNwxnM2qKD7WomuLhSFeKf8FLtdPZkyXl1unK9JIr
      NfCcGpFEmrgLtfIubjKtpvjQi6opHo6wKf5bETfOmbHhlz9nkq8/73neOw9K5LBoEixWUwDE
      agqAWE0BEKspAGI1BUCspgCI1RQAsZoCIFZTAMRqCoBYTQEQqykAYjUFQKzW9NehKztbWiZV
      ToymA3DQZVIH+3taMV6RUDV9CjSQ6eHZ7DadSZ+OZJyGieJSx0t2M3JmjIHebuLxeAuGKhK+
      5jvC4m1cuXzhxQ/7LJNqjMH3fYJX+jcNcCbddLm3SkYj+L7/pzrGvGzVMwbGOsOv2RbbvybA
      uW6PbHss1JqRCG+sOZCKEnUSodYEiEXMy7rfrTnUHiUeSe73qz+8prN/zY64w5X+8F6nY1rV
      2QwEQUAkcrjzbNVUzWa09NUcZODGNNjdLR9aza2NFabnFgEI6iWKFf+N24dR81ul3CYbhSKz
      s7Pfe873K5RK9dBrvmBYXFx8vV6jRm5zk2oTL7/ZN+LywgL1Rp25haWmfu9dalaLO9SauHFE
      +OcHTTKmwebKEr+dWuD6pTF2yj7d6Q4wPk8e3mdg7DJtcYhH43idvXS3v1vT/e7uLpFIkjv/
      8wmpnl7KFZeudBtewsGLdlItbvNweokr50/RMC7JVDuZTD9uCDdAqJcqbNZ3WV9eIRqUWcw1
      6Eq4xLw48YTL6mKOc5cu0t0Z7mlFo1Yit7lFLOqysrlFykvgeS61Yo1MZy+eG2q5l+q1IrPT
      s5R8w9rvP6Wt7zQ96U56Mhm8MP6ge6iWdtnIFWmLQjG/DVGPuaknjF//McOZ9Pe2P9rrAMaw
      ODuHH4ky1N9LLNXJQF8Xhe0NCjt5ujJZ/IbDyPAoq2vrpN/xzQ+Q6uxmbHiIrr4B+nt7iEUd
      IrEEpwYHWV2ep1CuMdjXg9fZw9jIEOtrm6G8+QGiXgLPaTCQHcEnSjqVoH8gSzLm4kRinD1/
      logJ9743AMV8HmJR8pvrNIyDl+og05sm5iVCe217ae/qIwAGupKkunppb29nbWOjZW9+v1Fj
      eT1P1C+zsr5NV1+GdCrJQHaYzra93zstnQOExZgGuVyZ7u6OQ61bKRYIom20eUd+oAyFX69i
      XI/oEf3bq1eKVE2M9uTx+ZTwvQiASKv8PxV8CQ5LFiY7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Superstore Return Analysis' width='192'>
      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
      6kG4Bgh5pAlVoJBHmlAAQh5pQgEIeaQJBSDkkSYUgJBHmlAAQh5pQgEIeaTpLQCuy7Vr17oO
      Ld68yaCQJaOyygfXl3q+dvPmTcDl8uVLuzaosLrEuXPvcmNugblbd+NiarVa/2sK67ve12qV
      WFgt73qe97yNBTbrO2u/uK5DrV5nbu4WRrXA0mbde61RXGGt3KJWr++4TtBp1elYdyv12Vab
      za3BaUvm5m7RrhRYLgZTntzFaFQo1TuYrRrFaqvveXtlbu5W1//F9QK9ApybpTXWyk3AoVAo
      fMinWczdCqZa2WajUGBQXcP1D/HM1cU55hZXgR4VYgRvvvU2qlnhB+9cYHWzwsW3/o75ikF7
      c41Lly9hWW1ee+2HOFqSpavvcfbd95H0UTZXbmPVCjSlON//9jeoNZu8+uq3cSMpbKNJTDJ5
      5dW/o27KLFx9nwvnP6AtJ9lYWWB0dBQ9lWZrs8hjp05w69oVavUaTRMa1RL18harhQ0SqSwK
      bd577yI2Mlcvvo+jRGlVN1lcXsFwFOavX6JhOBSLW8TcFoVKk5s3F6lUK8QVm+u3F6g12rid
      BvMLt3HlGNcufoApqawv3mZ1ZZF4foaYXWa1ZHDt4gfkh1OsrFdoNBs06zVyusZmJ0I+GeX6
      1UusriwTSY9Sr5QoFoskI7CyWWX+1k2K1QYj+SGqG0tYis6F995hfX0LTTF5/8J1ctkk167d
      ZKtcZXQ4T7Na4ubcbWoti2atQjahUjajDCVV3j1zls3NArFUjqXbN1ha28KpF7i8uIXSKXPl
      9jq5VISr129Rb3Yori9R2KyyubnC1uYmtZbN+tItitUWuaEs5bXbXLq5giZb3Ly1QKNj0mxU
      GcokuXbjFlvlGis3r1J3FexmhfnFJRw5wurCTdZWVlAzo8SlDm+9fZZMLsf8reusrhXIDY9i
      tYq89/41CltFVKfOlVurqJLFzdsLlGtN3E6V+aUVqnWDdrtBKq6xVNhideE2lWaHW1cvYUgR
      8tk0N65fZmOzRKdZY3FpCdNx+eC999DTOTYLa8RVh41inUuXL6GoClcuXWajUEDTFK7fvI2i
      RdGjGj86e5b88AjrS/ODVaBGtcTHfuoXMOpFjsye4ud+9jOUNws89+mf4ebcIl/84hdZunmJ
      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
      54cbmyjXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Sales &amp; Total Returns' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
